Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.a, model.2.b)
# Take model.2.b, cannot reject H_0 (H_0 being more restrictive model)
# Move on to evaluate Period:SNP
model.2.c <- mixed_model(
Severity ~Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Visit * sex +
Visit * SNP +
Visit * scaled_age +
Period * sex +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.b, model.2.c)
# Take model 2.b, we reject H_0 (H_0 being more restrictive)
# Move on to evaluate Visit:SNP
model.2.d <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Visit * sex +
Visit * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.b, model.2.d)
# take model 2.d, we cannot reject H_0, although by thin margin (pvalue=0.065)
# Move on to Visit:Age
model.2.e <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Visit * sex +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.d, model.2.e)
# Take model 2.e, we cannot reject H_0
# Move on to Visit:Sex
model.2.f <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.e, model.2.f)
# Take model 2.f, we cannot reject H_0
# Move on to Period:Age
model.2.g <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Period * sex +
Period * SNP +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.f, model.2.g)
# Take model.2.g, we cannot reject H_0
# Move on to Sex:SNP
model.2.h <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Period * sex +
Period * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.g, model.2.h)
# Take model.2.h, we cannot reject H_0
# Move on to Visit:Period
model.2.i <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Period * sex +
Period * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.h, model.2.i)
# Take model.2.i, we cannot reject H_0
# We do not drop SNP, age, sex, period as they are tied to research goals of the study
# Final model
final.glmm <- model.2.i
# Validation that final.glmm is indeed more performant than elaborate model.2
anova(final.glmm, model.2)
# Result is a p-value 0.4323, so cannot reject H_0, and so final.glmm is indeed
# more performant with an AIC of 1769 vs the elaborate model with an AIC of 1780
# TODO: Parameter interpretation for final_model with just signif.coefs
summary(final.glmm)
log_or_coefficients <- summary(final.glmm)$coef_table[, "Estimate"]
or_coefficients <- exp(log_or_coefficients)
# TODO: Interpret CI/se for the coefficients
raw_coeff_ci <- confint(final.glmm)
or_coeff_ci <- exp(raw_coeff_ci)
# Marginal coefficients and their errors
# TODO: Interpret marginal coeffs/SEs
marginal_coeff <- marginal_coefs(final.glmm, std_errors = T)
raw_marginal_coeff_ci <- confint(marginal_coeff)
or_marginal_coeff_ci <- exp(raw_marginal_coeff_ci)
final.glmm4 <- update(final.glmm, nAGQ = 4)
final.glmm5 <- update(final.glmm, nAGQ = 5)
final.glmm10 <- update(final.glmm, nAGQ = 10)
final.glmm20 <- update(final.glmm, nAGQ = 20)
models <- list(
"nAGQ=4" = final.glmm4, "nAGQ=5" = final.glmm5,
"nAGQ=10" = final.glmm10, "nAGQ=15" = final.glmm,
"nAGQ=20" = final.glmm20
)
extract <- function(obj) {
return(c(fixef(obj), "var_(Intercept)" = obj$D[1, 1], "logLik" = logLik(obj)))
}
nagq_q_stability <- data.frame(sapply(models, extract))
knitr::kable(nagq_q_stability,
caption = "Parameter and Loglikelihood Stability for Different $Q$ Values"
)
# TODO: Plot residuals
snp.labs <- c("SNP=0", "SNP=1", "SNP=2")
names(snp.labs) <- c(0, 1, 2)
period.labs <- c("Period A", "Period B")
names(period.labs) <- c("A", "B")
res_check_df <- DF
fitted_residuals <- residuals(final.glmm,
type="subject_specific")
res_check_df$residuals <- fitted_residuals
ggplot(data=res_check_df,
mapping=aes(x=Visit,
y=residuals)) +
facet_grid(
cols = vars(SNP),
rows = vars(Period),
labeller = labeller(
SNP = snp.labs,
Period = period.labs
)) +
geom_point(color = "dodgerblue4")
final_random_effects <- data.frame(ranef(final.glmm))
rand_int_plot <- ggplot(
data = final_random_effects,
mapping = aes(x = X.Intercept.)
) +
geom_histogram(aes(y = ..density..),
color = "black",
fill = "white",
lwd = 0.2,
bins = 40
) +
geom_density(color = "dodgerblue4", ) +
theme_bw() +
labs(
y = "Density",
x = "Empirical Bayes Estimates",
title = "EB Estimates of Random Intercepts"
)
rand_slope_plot <- ggplot(
data = final_random_effects,
mapping = aes(x = Visit)
) +
geom_histogram(aes(y = ..density..),
color = "black",
fill = "white",
lwd = 0.2,
bins = 40
) +
geom_density(color = "dodgerblue4", ) +
theme_bw() +
labs(
y = "Density",
x = "Empirical Bayes Estimates",
title = "EB Estimates of Random Slopes"
)
ggarrange(rand_int_plot, rand_slope_plot, ncol = 2)
ggplot(
data = final_random_effects,
mapping = aes(
x = X.Intercept.,
y = Visit
)
) +
geom_point(color = "dodgerblue4") +
labs(
x = "Random Intercepts",
y = "Random Slopes",
title = "Scatterplot of EB Estimates"
)
data.fitted.mean <- data.frame(
id = 1,
Visit = 0:7,
Period = rep(c(rep("A", 8), rep("B", 8)), 3),
SNP = factor(0:2)
)
probs <- predict(final.glmm,
newdata = data.fitted.mean,
type_pred = "response",
type = "mean_subject",
re.form = NA,
se.fit = TRUE)
summary(final.glmm)
?kable
summary(model.2.i)
anova(final.glmm, model.2)
anova(model.2, model.2.a)
anova(model.2.a, model.2.b)
anova(model.2.b, model.2.c)
anova(model.2.b, model.2.d)
anova(model.2.d, model.2.e)
anova(model.2.e, model.2.f)
anova(model.2.f, model.2.g)
anova(model.2.g, model.2.h)
anova(model.2.h, model.2.i)
anova(final.glmm, model.2)
summary(final.glmm)
or_coefficients
# TODO: Parameter interpretation for final_model with just signif.coefs
log_or_coefficients <- summary(final.glmm)$coef_table[, "Estimate"]
or_coefficients <- exp(log_or_coefficients)
knitr::kable(or_coefficients)
log_or_coefficients <- summary(final.glmm)$coef_table[, "Estimate"]
or_coefficients <- exp(log_or_coefficients)
or_coefficients
summary(final.glmm)
log_or_coefficients
# Change types of variables to factors
DF$Severity <- as.factor(DF$Severity)
DF$Period <- as.factor(DF$Period)
DF$sex <- as.factor(DF$sex)
# DF$SNP <- as.factor(DF$SNP)
# Centering and scaling age, so coefficient interpretation becomes
# what is the change in the response relative to a 1SD change in the predictor
DF$scaled_age <- scale(DF$Age)
# Opting for mixed_model directly, as convergence more likely due to
# aGQ being more flexible to either high dimensional, or broadly more uneven/
# extreme likelihood function surfaces --> glmer ran into high eigenvalue ratios
# for the Hessian for increased interaction terms and/or increasing the number of
# random effects. glmer also ran into gradient errors unless a high
# (~1e5) number of iterations was run --> not very computationally efficient
# Check to see if glmer converges
model.0 <- glmer(
Severity ~ Visit * Period +
Visit * sex +
Visit * SNP +
Visit * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP +
sex * scaled_age +
SNP * scaled_age +
(1 | id),
data = DF,
family = "binomial",
control = glmerControl(optimizer = "bobyqa"),
nAGQ = 15
)
# A penalized quasi-likelihood model runs into similar issues
model.pql <- glmmPQL(
Severity ~ Visit * Period +
Visit * sex +
Visit * SNP +
Visit * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP +
sex * scaled_age +
SNP * scaled_age,
random = ~ 1 | id,
family = binomial,
data = DF
)
# Skipping checks with Laplace due to computational issues with binary variables
# Linear coefficients, random intercept, maximal
model.1 <- mixed_model(
Severity ~ Visit * Period +
Visit * sex +
Visit * SNP +
Visit * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP +
sex * scaled_age +
SNP * scaled_age,
random = ~ 1 | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
# Linear coefficients, random intercept, random slope, maximal
model.2 <- mixed_model(
Severity ~ Visit * Period +
Visit * sex +
Visit * SNP +
Visit * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP +
sex * scaled_age +
SNP * scaled_age,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
# Quadratic visit, random intercept only, maximal
model.3 <- mixed_model(
Severity ~ (Visit + I(Visit^2)) * Period +
(Visit + I(Visit^2)) * sex +
(Visit + I(Visit^2)) * SNP +
(Visit + I(Visit^2)) * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP +
sex * scaled_age +
SNP * scaled_age,
random = ~ 1 | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
# Quadratic visit, random intercept and random slope, maximal
model.4 <- mixed_model(
Severity ~ (Visit + I(Visit^2)) * Period +
(Visit + I(Visit^2)) * sex +
(Visit + I(Visit^2)) * SNP +
(Visit + I(Visit^2)) * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP +
sex * scaled_age +
SNP * scaled_age,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
if (all(
model.1$converged, model.2$converged,
model.3$converged, model.4$converged
)) {
print("Achieved solution convergence in all models")
} else {
print("One of the above models has not converged")
}
# Linear vs. quadratic to determine the correct fixed effects
anova(model.1, model.3)
# H_0: Coefficients for quadratic terms are 0, H_A being that they are != 0
# p-value >= 0.05, so we do not include quadratic terms and select from the linear models
# Linear comp (rand int vs rand int + rand slope)
random_effects_lrt <- anova(model.1, model.2)$LRT
0.5 * pchisq(random_effects_lrt, df = 1, lower.tail = FALSE) +
0.5 * pchisq(random_effects_lrt, df = 2, lower.tail = FALSE)
# Between the linear models, rand int+rand slope (model.2) is signif. better
# Reject H_0: D=[[\sigma^2_int, 0][0,0]]
# Take H_A: D=[[\sigma^2_int, \sigma_{int,time}][\sigma_{int,time},\sigma^2_time]]
# Move forward with model.2
summary(model.2)
model.2.coefs <- summary(model.2)$coef_table
signif.coefs <- model.2.coefs[model.2.coefs[, "p-value"] < 0.05, ]
signif.coefs
# We take a look at the interaction terms to evaluate which terms to drop
# Starting with sex:scaled_age
model.2.a <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Visit * sex +
Visit * SNP +
Visit * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP +
SNP * scaled_age,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2, model.2.a)
model.2.b <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Visit * sex +
Visit * SNP +
Visit * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.a, model.2.b)
model.2.c <- mixed_model(
Severity ~Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Visit * sex +
Visit * SNP +
Visit * scaled_age +
Period * sex +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.b, model.2.c)
model.2.d <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Visit * sex +
Visit * scaled_age +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.b, model.2.d)
model.2.e <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Visit * sex +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.d, model.2.e)
model.2.f <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Period * sex +
Period * SNP +
Period * scaled_age +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.e, model.2.f)
model.2.g <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Period * sex +
Period * SNP +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
model.2.g <- mixed_model(
Severity ~ Visit + Period + scaled_age + sex + SNP +
Visit * Period +
Period * sex +
Period * SNP +
sex * SNP,
random = ~ Visit | id,
data = DF,
family = "binomial",
control = list(nAGQ = 15)
)
anova(model.2.f, model.2.g)
